
@article{visser_speeding_2015,
	title = {Speeding {Up} {Ecological} and {Evolutionary} {Computations} in {R}; {Essentials} of {High} {Performance} {Computing} for {Biologists}},
	volume = {11},
	issn = {1553-7358},
	url = {http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004140},
	doi = {10.1371/journal.pcbi.1004140},
	abstract = {Computation has become a critical component of research in biology. A risk has emerged that computational and programming challenges may limit research scope, depth, and quality. We review various solutions to common computational efficiency problems in ecological and evolutionary research. Our review pulls together material that is currently scattered across many sources and emphasizes those techniques that are especially effective for typical ecological and environmental problems. We demonstrate how straightforward it can be to write efficient code and implement techniques such as profiling or parallel computing. We supply a newly developed R package ( aprof ) that helps to identify computational bottlenecks in R code and determine whether optimization can be effective. Our review is complemented by a practical set of examples and detailed Supporting Information material ( S1 – S3  Texts) that demonstrate large improvements in computational speed (ranging from 10.5 times to 14,000 times faster). By improving computational efficiency, biologists can feasibly solve more complex tasks, ask more ambitious questions, and include more sophisticated analyses in their research.},
	number = {3},
	urldate = {2016-08-12},
	journal = {PLOS Comput Biol},
	author = {Visser, Marco D. and McMahon, Sean M. and Merow, Cory and Dixon, Philip M. and Record, Sydne and Jongejans, Eelke},
	month = mar,
	year = {2015},
	keywords = {Algorithms, Biologists, Computational Biology, Memory, Optimization, Programming Languages, Simulation and modeling, Theoretical ecology},
	pages = {e1004140},
	file = {Full Text PDF:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/FSM5RHBA/Visser et al. - 2015 - Speeding Up Ecological and Evolutionary Computatio.pdf:application/pdf;Snapshot:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/GFK3DE88/article.html:text/html}
}


@book{burns_r_2012,
	title = {The {R} {Inferno}},
	isbn = {978-1-4710-4652-0},
	url = {http://www.burns-stat.com/pages/Tutor/R_inferno.pdf},
	abstract = {An essential guide to the trouble spots and oddities of R.  In spite of the quirks exposed here, R is the best computing environment for most data analysis tasks.  R is free, open-source, and has thousands of contributed packages.  It is used in such diverse fields as ecology, finance, genomics and music.  If you are using spreadsheets to understand data, switch to R.  You will have safer -- and ultimately, more convenient -- computations.},
	language = {English},
	publisher = {Lulu.com},
	author = {Burns, Patrick},
	month = jan,
	year = {2012}
}


@misc{ross_faster_2013,
	title = {{FasteR}! {HigheR}! {StrongeR}! - {A} {Guide} to {Speeding} {Up} {R} {Code} for {Busy} {People}},
	url = {http://www.noamross.net/blog/2013/4/25/faster-talk.html},
	urldate = {2016-09-02},
	journal = {Noam Ross},
	author = {Ross, Noam},
	month = apr,
	year = {2013},
	file = {Snapshot:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/64SSBRVJ/faster-talk.html:text/html}
}

@misc{ross_vectorization_2014,
	title = {Vectorization in {R}: {Why}?},
	shorttitle = {Vectorization in {R}},
	url = {http://www.noamross.net/blog/2014/4/16/vectorization-in-r--why.html},
	urldate = {2016-09-02},
	journal = {Noam Ross},
	author = {Ross, Noam},
	month = apr,
	year = {2014},
	file = {Snapshot:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/INUUEJXT/vectorization-in-r--why.html:text/html}
}


@misc{gordon_how-go_2015,
	title = {How-to go parallel in {R} – basics + tips},
	url = {http://gforge.se/2015/02/how-to-go-parallel-in-r-basics-tips/},
	abstract = {Today is a good day to start parallelizing your code. I’ve been using the parallel package since its integration with R (v. 2.14.0) and its much easier than it at first seems. In this post I\&…},
	urldate = {2016-09-02},
	journal = {G-Forge},
	author = {Gordon, Max},
	month = feb,
	year = {2015},
	file = {Snapshot:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/CIQGFRPZ/how-to-go-parallel-in-r-basics-tips.html:text/html}
}


@Manual{eddelbuettel_gcbd_2013,
    title = {gcbd: GPU/CPU Benchmarking in Debian-based systems},
    author = {Dirk Eddelbuettel},
    year = {2013},
    note = {R package version 0.2.5},
    url = {https://CRAN.R-project.org/package=gcbd},
}


@book{gillespie_efficient_2016,
	title = {Efficient {R} {Programming}: {A} {Practical} {Guide} to {Smarter} {Programming}},
	isbn = {978-1-4919-5078-4},
	shorttitle = {Efficient {R} {Programming}},
	url = {https://csgillespie.github.io/efficientR/},
	abstract = {Become a more productive programmer with "Efficient R Programming." Drawing on years of experience teaching R courses, authors Colin Gillespie and Robin Lovelace give practical advice on a range of topics from optimizing set-up of RStudio to leveraging C++ that make this book a valuable asset for both experienced and novice programmers. It s suitable for academics, business users, and programmers from a wide range of backgrounds.Get practical, tried-and-true advice from longtime R instructorsDive into a wide range of topics, including RStudio set-up and leveraging C++, suitable for all skill levelsGain insight into RStudio s functionality to boost code-writing productivityLearn the necessary skills for team-based R programming workSave time, and energy, debugging code and searching online forums"},
	language = {en},
	publisher = {O'Reilly UK Limited},
	author = {Gillespie, Colin and Lovelace, Robin},
	month = oct,
	year = {2016},
	note = {Google-Books-ID: 7wAjjwEACAAJ},
	keywords = {Computers / Databases / Data Mining, Computers / Data Processing, Computers / Programming / Object Oriented}
}

@article{nash_best_2014,
	title = {On {Best} {Practice} {Optimization} {Methods} in {R}},
	volume = {60},
	issn = {1548-7660},
	url = {https://www.jstatsoft.org/index.php/jss/article/view/v060i02},
	doi = {10.18637/jss.v060.i02},
	abstract = {R (R Core Team 2014) provides a powerful and flexible system for statistical computations. It has a default-install set of functionality that can be expanded by the use of several thousand add-in packages as well as user-written scripts. While R is itself a programming language, it has proven relatively easy to incorporate programs in other languages, particularly Fortran and C. Success, however, can lead to its own costs: Users face a confusion of choice when trying to select packages in approaching a problem. A need to maintain workable examples using early methods may mean some tools offered as a default may be dated. In an open-source project like R, how to decide what tools offer {\textbackslash}"best practice{\textbackslash}" choices, and how to implement such a policy, present a serious challenge. We discuss these issues with reference to the tools in R for nonlinear parameter estimation (NLPE) and optimization, though for the present article `optimization` will be limited to function minimization of essentially smooth functions with at most bounds constraints on the parameters. We will abbreviate this class of problems as NLPE. We believe that the concepts proposed are transferable to other classes of problems seen by R users.},
	number = {1},
	journal = {Journal of Statistical Software},
	author = {Nash, John},
	year = {2014},
	pages = {1--14}
}