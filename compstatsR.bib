
@article{visser_speeding_2015,
	title = {Speeding {Up} {Ecological} and {Evolutionary} {Computations} in {R}; {Essentials} of {High} {Performance} {Computing} for {Biologists}},
	volume = {11},
	issn = {1553-7358},
	url = {http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004140},
	doi = {10.1371/journal.pcbi.1004140},
	abstract = {Computation has become a critical component of research in biology. A risk has emerged that computational and programming challenges may limit research scope, depth, and quality. We review various solutions to common computational efficiency problems in ecological and evolutionary research. Our review pulls together material that is currently scattered across many sources and emphasizes those techniques that are especially effective for typical ecological and environmental problems. We demonstrate how straightforward it can be to write efficient code and implement techniques such as profiling or parallel computing. We supply a newly developed R package ( aprof ) that helps to identify computational bottlenecks in R code and determine whether optimization can be effective. Our review is complemented by a practical set of examples and detailed Supporting Information material ( S1 – S3  Texts) that demonstrate large improvements in computational speed (ranging from 10.5 times to 14,000 times faster). By improving computational efficiency, biologists can feasibly solve more complex tasks, ask more ambitious questions, and include more sophisticated analyses in their research.},
	number = {3},
	urldate = {2016-08-12},
	journal = {PLOS Comput Biol},
	author = {Visser, Marco D. and McMahon, Sean M. and Merow, Cory and Dixon, Philip M. and Record, Sydne and Jongejans, Eelke},
	month = mar,
	year = {2015},
	keywords = {Algorithms, Biologists, Computational Biology, Memory, Optimization, Programming Languages, Simulation and modeling, Theoretical ecology},
	pages = {e1004140},
	file = {Full Text PDF:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/FSM5RHBA/Visser et al. - 2015 - Speeding Up Ecological and Evolutionary Computatio.pdf:application/pdf;Snapshot:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/GFK3DE88/article.html:text/html}
}


@book{burns_r_2012,
	title = {The {R} {Inferno}},
	isbn = {978-1-4710-4652-0},
	url = {http://www.burns-stat.com/pages/Tutor/R_inferno.pdf},
	abstract = {An essential guide to the trouble spots and oddities of R.  In spite of the quirks exposed here, R is the best computing environment for most data analysis tasks.  R is free, open-source, and has thousands of contributed packages.  It is used in such diverse fields as ecology, finance, genomics and music.  If you are using spreadsheets to understand data, switch to R.  You will have safer -- and ultimately, more convenient -- computations.},
	language = {English},
	publisher = {Lulu.com},
	author = {Burns, Patrick},
	month = jan,
	year = {2012}
}


@misc{ross_faster_2013,
	title = {{FasteR}! {HigheR}! {StrongeR}! - {A} {Guide} to {Speeding} {Up} {R} {Code} for {Busy} {People}},
	url = {http://www.noamross.net/blog/2013/4/25/faster-talk.html},
	urldate = {2016-09-02},
	journal = {Noam Ross},
	author = {Ross, Noam},
	month = apr,
	year = {2013},
	file = {Snapshot:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/64SSBRVJ/faster-talk.html:text/html}
}

@misc{ross_vectorization_2014,
	title = {Vectorization in {R}: {Why}?},
	shorttitle = {Vectorization in {R}},
	url = {http://www.noamross.net/blog/2014/4/16/vectorization-in-r--why.html},
	urldate = {2016-09-02},
	journal = {Noam Ross},
	author = {Ross, Noam},
	month = apr,
	year = {2014},
	file = {Snapshot:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/INUUEJXT/vectorization-in-r--why.html:text/html}
}


@misc{gordon_how-go_2015,
	title = {How-to go parallel in {R} – basics + tips},
	url = {http://gforge.se/2015/02/how-to-go-parallel-in-r-basics-tips/},
	abstract = {Today is a good day to start parallelizing your code. I’ve been using the parallel package since its integration with R (v. 2.14.0) and its much easier than it at first seems. In this post I\&…},
	urldate = {2016-09-02},
	journal = {G-Forge},
	author = {Gordon, Max},
	month = feb,
	year = {2015},
	file = {Snapshot:/home/bolker/.mozilla/firefox/f2nw6467.default/zotero/storage/CIQGFRPZ/how-to-go-parallel-in-r-basics-tips.html:text/html}
}


@Manual{eddelbuettel_gcbd_2013,
    title = {gcbd: GPU/CPU Benchmarking in Debian-based systems},
    author = {Dirk Eddelbuettel},
    year = {2013},
    note = {R package version 0.2.5},
    url = {https://CRAN.R-project.org/package=gcbd},
}


@book{gillespie_efficient_2016,
	title = {Efficient {R} {Programming}: {A} {Practical} {Guide} to {Smarter} {Programming}},
	isbn = {978-1-4919-5078-4},
	shorttitle = {Efficient {R} {Programming}},
	url = {https://csgillespie.github.io/efficientR/},
	abstract = {Become a more productive programmer with "Efficient R Programming." Drawing on years of experience teaching R courses, authors Colin Gillespie and Robin Lovelace give practical advice on a range of topics from optimizing set-up of RStudio to leveraging C++ that make this book a valuable asset for both experienced and novice programmers. It s suitable for academics, business users, and programmers from a wide range of backgrounds.Get practical, tried-and-true advice from longtime R instructorsDive into a wide range of topics, including RStudio set-up and leveraging C++, suitable for all skill levelsGain insight into RStudio s functionality to boost code-writing productivityLearn the necessary skills for team-based R programming workSave time, and energy, debugging code and searching online forums"},
	language = {en},
	publisher = {O'Reilly UK Limited},
	author = {Gillespie, Colin and Lovelace, Robin},
	month = oct,
	year = {2016},
	note = {Google-Books-ID: 7wAjjwEACAAJ},
	keywords = {Computers / Databases / Data Mining, Computers / Data Processing, Computers / Programming / Object Oriented}
}

@article{nash_best_2014,
	title = {On {Best} {Practice} {Optimization} {Methods} in {R}},
	volume = {60},
	issn = {1548-7660},
	url = {https://www.jstatsoft.org/index.php/jss/article/view/v060i02},
	doi = {10.18637/jss.v060.i02},
	abstract = {R (R Core Team 2014) provides a powerful and flexible system for statistical computations. It has a default-install set of functionality that can be expanded by the use of several thousand add-in packages as well as user-written scripts. While R is itself a programming language, it has proven relatively easy to incorporate programs in other languages, particularly Fortran and C. Success, however, can lead to its own costs: Users face a confusion of choice when trying to select packages in approaching a problem. A need to maintain workable examples using early methods may mean some tools offered as a default may be dated. In an open-source project like R, how to decide what tools offer {\textbackslash}"best practice{\textbackslash}" choices, and how to implement such a policy, present a serious challenge. We discuss these issues with reference to the tools in R for nonlinear parameter estimation (NLPE) and optimization, though for the present article `optimization` will be limited to function minimization of essentially smooth functions with at most bounds constraints on the parameters. We will abbreviate this class of problems as NLPE. We believe that the concepts proposed are transferable to other classes of problems seen by R users.},
	number = {1},
	journal = {Journal of Statistical Software},
	author = {Nash, John},
	year = {2014},
	pages = {1--14}
}


@article{wilson_best_2014,
	title = {Best {Practices} for {Scientific} {Computing}},
	volume = {12},
	issn = {1545-7885},
	url = {http://dx.plos.org/10.1371/journal.pbio.1001745},
	doi = {10.1371/journal.pbio.1001745},
	language = {en},
	number = {1},
	urldate = {2014-08-13},
	journal = {PLoS Biology},
	author = {Wilson, Greg and Aruliah, D. A. and Brown, C. Titus and Chue Hong, Neil P. and Davis, Matt and Guy, Richard T. and Haddock, Steven H. D. and Huff, Kathryn D. and Mitchell, Ian M. and Plumbley, Mark D. and Waugh, Ben and White, Ethan P. and Wilson, Paul},
	editor = {Eisen, Jonathan A.},
	month = jan,
	year = {2014},
	pages = {e1001745}
}


@book{box_statistics_1978,
	address = {New York},
	title = {Statistics for {Experimenters}: {An} {Introduction} to {Design}, {Data} {Analysis}, and {Model} {Building}},
	isbn = {978-0-471-09315-2},
	shorttitle = {Statistics for {Experimenters}},
	abstract = {Introduces the philosophy of experimentation and the part that statistics play in experimentation. Emphasizes the need to develop a capability for ``statistical thinking'' by using examples drawn from actual case studies.},
	language = {English},
	publisher = {John Wiley \& Sons},
	author = {Box, George E. P. and Hunter, William G. and Hunter, J. Stuart},
	year = {1978}
}


@book{eddelbuettel_seamless_2013,
	address = {New York},
	title = {Seamless {R} and {C}++ {Integration} with {Rcpp}},
	isbn = {978-1-4614-6867-7},
	abstract = {Rcpp is the glue that binds the power and versatility of R with the speed and efficiency of C++.  With Rcpp, the transfer of data between R and C++ is nearly seamless, and high-performance statistical computing is finally accessible to most R users.  Rcpp should be part of every statistician's toolbox.  -- Michael Braun, MIT Sloan School of Management "Seamless R and C++ integration with Rcpp" is simply a wonderful book.  For anyone who uses C/C++ and R, it is an indispensable resource.  The writing is outstanding.  A huge bonus is the section on applications. This section covers the matrix packages Armadillo and Eigen and the GNU Scientific Library as well as RInside which enables you to use R inside C++. These applications are what most of us need to know to really do scientific programming with R and C++. I love this book. -- Robert McCulloch, University of Chicago Booth School of BusinessRcpp is now considered an essential package for anybody doing serious computational research using R. Dirk's book is an excellent companion and takes the reader from a gentle introduction to more advanced applications via numerous examples and efficiency enhancing gems. The book is packed with all you might have ever wanted to know about Rcpp, its cousins (RcppArmadillo, RcppEigen .etc.), modules, package development and sugar. Overall, this book is a must-have on your shelf. -- Sanjog Misra, UCLA Anderson School of ManagementThe Rcpp package represents a major leap forward for scientific computations with R. With very few lines of C++ code, one has R's data structures readily at hand for further computations in C++. Hence, high-level numerical programming can be made in C++ almost as easily as in R, but often with a substantial speed gain. Dirk is a crucial person in these developments, and his book takes the reader from the first fragile steps on to using the full Rcpp machinery. A very recommended book! -- Søren Højsgaard, Department of Mathematical Sciences, Aalborg University, Denmark  "Seamless R and C ++ Integration with Rcpp" provides the first comprehensive introduction to Rcpp. Rcpp has become the most widely-used language extension for R, and is deployed by over one-hundred different CRAN and BioConductor packages. Rcpp permits users to pass scalars, vectors, matrices, list or entire R objects back and forth between R and C++ with ease. This brings the depth of the R analysis framework together with the power, speed, and efficiency of C++.},
	language = {English},
	publisher = {Springer},
	author = {Eddelbuettel, Dirk},
	month = jun,
	year = {2013}
}

@book{wickham_advanced_2014,
	address = {Boca Raton, FL},
	edition = {1},
	title = {Advanced {R}},
	isbn = {978-1-4665-8696-3},
	abstract = {An Essential Reference for Intermediate and Advanced R Programmers Advanced R presents useful tools and techniques for attacking many types of R programming problems, helping you avoid mistakes and dead ends. With more than ten years of experience programming in R, the author illustrates the elegance, beauty, and flexibility at the heart of R.  The book develops the necessary skills to produce quality code that can be used in a variety of circumstances. You will learn:  The fundamentals of R, including standard data types and functions Functional programming as a useful framework for solving wide classes of problems The positives and negatives of metaprogramming  How to write fast, memory-efficient code   This book not only helps current R users become R programmers but also shows existing programmers what’s special about R. Intermediate R programmers can dive deeper into R and learn new strategies for solving diverse problems while programmers from other languages can learn the details of R and understand why R works the way it does.},
	language = {English},
	publisher = {Chapman and Hall/CRC},
	author = {Wickham, Hadley},
	month = sep,
	year = {2014},
        url = {http://adv-r.had.co.nz/Rcpp.html}
}

@misc{bryanCode2018,
  title = {Code Smells and Feels},
  author = {Bryan, Jenny},
  year = 2018,
  month = jul,
  journal = {Speaker Deck},
  urldate = {2024-04-28},
  abstract = {Talk for useR!2018 in Brisbane: https://user2018.r-project.org by Jenny Bryan Twitter: https://twitter.com/jennyBryan/ GitHub: https://github.com/jennybc References, code, etc. here: http://rstd.io/code-smells Full URL: https://github.com/jennybc/code-smells-and-feels\#readme},
  url = {https://speakerdeck.com/jennybc/code-smells-and-feels},
  langid = {english},
  file = {/home/bolker/Documents/zotero_new/storage/RDMZ7NFH/code-smells-and-feels.html}
}

@misc{burnsInfernoish2012,
  title = {Inferno-Ish {{R}}: Or, {{How I Learned}} to {{Stop Worrying}} and {{Love}} the {{Bomb}}},
  author = {Burns, Patrick},
  year = 2012,
  month = may,
  urldate = {2022-03-24},
  url = {https://www.burns-stat.com/documents/presentations/inferno-ish-R/}
}
